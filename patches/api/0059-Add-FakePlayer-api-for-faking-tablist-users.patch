From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: chickeneer <emcchickeneer@gmail.com>
Date: Tue, 29 Dec 2020 01:31:22 -0600
Subject: [PATCH] Add FakePlayer api for faking tablist users


diff --git a/src/main/java/com/domnian/paperdragon/api/DAPI_Server.java b/src/main/java/com/domnian/paperdragon/api/DAPI_Server.java
new file mode 100644
index 0000000000000000000000000000000000000000..04408d33467da39a2d1b87b89d1f096d9c86c6c8
--- /dev/null
+++ b/src/main/java/com/domnian/paperdragon/api/DAPI_Server.java
@@ -0,0 +1,31 @@
+/*
+ * Copyright (c) 2020. Starlis LLC / dba Empire Minecraft
+ *
+ * This source code is proprietary software and must not be redistributed without Starlis LLC's approval
+ *
+ */
+
+package com.domnian.paperdragon.api;
+
+import com.destroystokyo.paper.profile.PlayerProfile;
+import org.bukkit.GameMode;
+
+import javax.annotation.Nullable;
+import java.util.Set;
+import java.util.UUID;
+
+public interface DAPI_Server {
+
+    @Nullable
+    FakePlayer getFakePlayerByUUID(UUID uuid);
+    void doFakePlayerJoin(FakePlayer fakePlayer);
+    void doFakePlayerQuit(FakePlayer fakePlayer);
+    void doUpdateFakePlayerPing(FakePlayer fakePlayer, int ping);
+    void doUpdateFakePlayerGameMode(FakePlayer fakePlayer, GameMode gameMode);
+    void doUpdateFakePlayerListName(FakePlayer fakePlayer, String playerListName);
+
+    FakePlayer createFakePlayer(PlayerProfile profile, int ping, GameMode gameMode, String playerListName);
+
+    Set<FakePlayer> getJoinedFakePlayers();
+
+}
diff --git a/src/main/java/com/domnian/paperdragon/api/DragonAPI.java b/src/main/java/com/domnian/paperdragon/api/DragonAPI.java
index 7559326ec555de974d4108964dd30ad14cb5139e..2f383a95b02b893dba2da010e72eef7f2d54c473 100644
--- a/src/main/java/com/domnian/paperdragon/api/DragonAPI.java
+++ b/src/main/java/com/domnian/paperdragon/api/DragonAPI.java
@@ -11,6 +11,7 @@ public class DragonAPI {
     public static DAPI_Meta meta;
     public static DAPI_Chat chat;
     public static DAPI_Heads heads;
+    public static DAPI_Server server;
 
     public static String stack() {
         return ExceptionUtils.getFullStackTrace(new Throwable());
diff --git a/src/main/java/com/domnian/paperdragon/api/FakePlayer.java b/src/main/java/com/domnian/paperdragon/api/FakePlayer.java
new file mode 100644
index 0000000000000000000000000000000000000000..01b78717779e2b80e2cbb974748acdb379e253f8
--- /dev/null
+++ b/src/main/java/com/domnian/paperdragon/api/FakePlayer.java
@@ -0,0 +1,27 @@
+/*
+ * Copyright (c) 2020. Starlis LLC / dba Empire Minecraft
+ *
+ * This source code is proprietary software and must not be redistributed without Starlis LLC's approval
+ *
+ */
+
+package com.domnian.paperdragon.api;
+
+import com.destroystokyo.paper.profile.PlayerProfile;
+import org.bukkit.GameMode;
+
+import java.util.UUID;
+
+public interface FakePlayer {
+
+    PlayerProfile getProfile();
+
+    String getPlayerListName();
+
+    int getPing();
+
+    GameMode getGameMode();
+
+    UUID getUniqueId();
+
+}
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 9f84a075e166e01270a69ea36959c2ad8d784009..9fbcd4ae435bfa804afc6e8258dcec8545313caf 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -7,6 +7,7 @@ import com.destroystokyo.paper.ClientOption; // Paper
 import com.destroystokyo.paper.Title; // Paper
 import net.kyori.adventure.text.Component;
 import com.destroystokyo.paper.profile.PlayerProfile; // Paper
+import com.domnian.paperdragon.api.FakePlayer; // PaperDragon
 import java.util.Date; // Paper
 import org.bukkit.BanEntry; // Paper
 import org.bukkit.BanList; // Paper
@@ -1264,6 +1265,40 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      */
     public boolean canSee(@NotNull Player player);
 
+    // PaperDragon start
+    /**
+     * Checks to see if a fake player has been hidden from this player
+     *
+     * @param fakePlayer FakePlayer to check
+     * @return True if the provided fakePlayer is not being hidden from this
+     *     player
+     */
+    boolean canSee(@NotNull FakePlayer fakePlayer);
+    /**
+     * Hides a fake player from this player
+     *
+     * @param plugin Plugin that wants to hide the fake player
+     * @param fakePlayer FakePlayer to hide
+     */
+    void hideFakePlayer(@NotNull Plugin plugin, @NotNull FakePlayer fakePlayer);
+    /**
+     * Allows this player to see a fake player that was previously hidden. If
+     * another another plugin had hidden the fake player too, then the player will
+     * remain hidden until the other plugin calls this method too.
+     *
+     * @param plugin Plugin that wants to show the fake player
+     * @param fakePlayer FakePlayer to show
+     */
+    void showFakePlayer(@NotNull Plugin plugin, @NotNull FakePlayer fakePlayer);
+    /**
+     * Gets all fake players hidden with {@link #hideFakePlayer(Plugin, FakePlayer)}.
+     *
+     * @return a Set with all hidden fake players
+     */
+    @NotNull
+    java.util.Set<FakePlayer> getHiddenFakePlayers();
+    // PaperDragon end
+
     /**
      * Checks to see if this player is currently flying or not.
      *
