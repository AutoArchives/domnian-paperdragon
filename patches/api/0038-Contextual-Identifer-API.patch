From 7acd95ba61c4b9fad103dc87e5c3d6ca3334b8f0 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 17 May 2016 19:38:55 -0400
Subject: [PATCH] Contextual Identifer API

Seems silly, but I want to have a common interface to represent an identity
but not have risk of 2 objects equalling each other.

Example: ChunkIdentifier and a ResidenceIdentifier are 2 ways to identity a context
but cant ever equal each other.

Implementers should not expose entropy data, just provide equal/hashcode.

Objects represended by an Identifier, should be able to use them as their equal/hashcodes.
---
 .../com/domnian/paperdragon/Identifier.java   |  3 +++
 .../domnian/paperdragon/UniqueIdentifier.java | 27 +++++++++++++++++++
 src/main/java/org/bukkit/Chunk.java           |  3 +++
 3 files changed, 33 insertions(+)
 create mode 100644 src/main/java/com/domnian/paperdragon/Identifier.java
 create mode 100644 src/main/java/com/domnian/paperdragon/UniqueIdentifier.java

diff --git a/src/main/java/com/domnian/paperdragon/Identifier.java b/src/main/java/com/domnian/paperdragon/Identifier.java
new file mode 100644
index 000000000..4873358b6
--- /dev/null
+++ b/src/main/java/com/domnian/paperdragon/Identifier.java
@@ -0,0 +1,3 @@
+package com.domnian.paperdragon;
+
+public interface Identifier {}
diff --git a/src/main/java/com/domnian/paperdragon/UniqueIdentifier.java b/src/main/java/com/domnian/paperdragon/UniqueIdentifier.java
new file mode 100644
index 000000000..c0ade55bc
--- /dev/null
+++ b/src/main/java/com/domnian/paperdragon/UniqueIdentifier.java
@@ -0,0 +1,27 @@
+package com.domnian.paperdragon;
+
+import javax.annotation.Nonnull;
+import java.util.UUID;
+
+public class UniqueIdentifier implements Identifier {
+
+    private final UUID uuid;
+
+    public UniqueIdentifier(@Nonnull UUID uuid) {
+        this.uuid = uuid;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        UniqueIdentifier that = (UniqueIdentifier) o;
+        return uuid.equals(that.uuid);
+    }
+
+    @Override
+    public int hashCode() {
+        return uuid.hashCode();
+    }
+
+}
diff --git a/src/main/java/org/bukkit/Chunk.java b/src/main/java/org/bukkit/Chunk.java
index 3642c375e..fa9cb5310 100644
--- a/src/main/java/org/bukkit/Chunk.java
+++ b/src/main/java/org/bukkit/Chunk.java
@@ -14,6 +14,9 @@ import org.jetbrains.annotations.NotNull;
  */
 public interface Chunk extends PersistentDataHolder {
 
+    @NotNull
+    com.domnian.paperdragon.Identifier getIdentifier(); // PaperDragon
+
     /**
      * Gets the X-coordinate of this chunk
      *
-- 
2.20.1.windows.1

