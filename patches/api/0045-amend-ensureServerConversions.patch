From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 29 Mar 2019 21:45:09 -0400
Subject: [PATCH] amend ensureServerConversions

pending paper merge, store data version on stacks

diff --git a/src/main/java/org/bukkit/inventory/ItemFactory.java b/src/main/java/org/bukkit/inventory/ItemFactory.java
index 98a970a6582dca22e719a31559c7becea4725cb2..475f9fea44df7aac42850a5964c6e2be94dfb1bb 100644
--- a/src/main/java/org/bukkit/inventory/ItemFactory.java
+++ b/src/main/java/org/bukkit/inventory/ItemFactory.java
@@ -261,6 +261,18 @@ public interface ItemFactory {
     String getI18NDisplayName(@Nullable ItemStack item);
     // Paper end - add getI18NDisplayName
 
+    // PaperDragon start
+    /**
+     * Ensure that this stack is represented by an Internal Item Stack
+     * @param item The stack to ensure is internal
+     * @return A CraftItemStack backed ItemStack with an internal representation
+     * @deprecated Don't use this
+     */
+    @Deprecated
+    @NotNull
+    ItemStack _asServerItemStack(@NotNull ItemStack item);
+    // PaperDragon end
+
     // Paper start - ensure server conversions API
     /**
      * Minecraft's updates are converting simple item stacks into more complex NBT oriented Item Stacks.
diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index d871970163f1d21bd40398780ea8adfb8eb04eb0..0a447df93e72c3d3359ae2bc9dbd5896aaf6e756 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -31,6 +31,31 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
     private int amount = 0;
     private MaterialData data = null;
     private ItemMeta meta;
+    // Paper start
+    private Integer dataVersion = null;
+
+    /**
+     * Get's the DataVersion of this item stack, usually always the current version.
+     * If you do not know your data version from pre 1.13.2, you may call .setDataVersion(-1)
+     * and call {@link #ensureServerConversions()}.
+     * @return The Data Version of this itemstack.
+     */
+    public int getDataVersion() {
+        return dataVersion != null ? dataVersion : Bukkit.getUnsafe().getDataVersion();
+    }
+
+    /**
+     * Sets the DataVersion of this item stack, in preparation for calling {@link #ensureServerConversions()}
+     * You should not use this method unless you are converting known legacy data.
+     * @param dataVersion The data version. Use -1 for pre 1.13.2 data. Any stack created post 1.13.2 needs to know its data version
+     * @return previous data version
+     */
+    public int setDataVersion(int dataVersion) {
+        int previousDataVersion = this.getDataVersion();
+        this.dataVersion = dataVersion;
+        return previousDataVersion;
+    }
+    // Paper end
 
     @Utility
     protected ItemStack() {}
@@ -571,7 +596,7 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
     public Map<String, Object> serialize() {
         Map<String, Object> result = new LinkedHashMap<String, Object>();
 
-        result.put("v", Bukkit.getUnsafe().getDataVersion()); // Include version to indicate we are using modern material names (or LEGACY prefix)
+        result.put("v", this.getDataVersion()); // Paper
         result.put("type", getType().name());
 
         if (getAmount() != 1) {
@@ -623,6 +648,7 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
         }
 
         ItemStack result = new ItemStack(type, amount, damage);
+        result.dataVersion = version; // Paper
 
         if (args.containsKey("enchantments")) { // Backward compatiblity, @deprecated
             Object raw = args.get("enchantments");
@@ -810,8 +836,9 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
      *
      * Use this method to ensure any desired data conversions are processed.
      * The input itemstack will not be the same as the returned itemstack.
+     * Runs all Minecraft Data Fixer updates on this ItemStack that are needed.
      *
-     * @return A potentially Data Converted ItemStack
+     * @return A new stack with Data Converted ItemStack
      */
     @NotNull
     public ItemStack ensureServerConversions() {
