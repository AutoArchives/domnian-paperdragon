From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: willies952002 <admin@domnian.com>
Date: Sun, 12 Sep 2021 16:01:22 -0400
Subject: [PATCH] Add option to force 2D search for nether portals


diff --git a/src/main/java/com/domnian/paperdragon/DragonWorldConfig.java b/src/main/java/com/domnian/paperdragon/DragonWorldConfig.java
index f2fe260d8a0ac860b2af742735ade7ac70b0457a..92f1c6fb19dea9c55835bf9ad88fbec14a8f162b 100644
--- a/src/main/java/com/domnian/paperdragon/DragonWorldConfig.java
+++ b/src/main/java/com/domnian/paperdragon/DragonWorldConfig.java
@@ -77,6 +77,11 @@ public class DragonWorldConfig {
     private void advancements() {
         broadcastAdvancementsToWorld = getBoolean("world-settings.broadcast-advancements-to-world", false);
     }
+
+    public boolean force2DPortalSearch = false;
+    private void portalOverrides() {
+        force2DPortalSearch = getBoolean("force-2d-portal-search", false);
+    }
     // TODO Add New Settings!! :D
 
 }
diff --git a/src/main/java/net/minecraft/world/level/portal/PortalForcer.java b/src/main/java/net/minecraft/world/level/portal/PortalForcer.java
index 8f147cd9798779eb2a72f444bf7fcb6c3cdc4971..c7b79ae207b91229b027c6e817d45fa56dfbbddc 100644
--- a/src/main/java/net/minecraft/world/level/portal/PortalForcer.java
+++ b/src/main/java/net/minecraft/world/level/portal/PortalForcer.java
@@ -74,6 +74,19 @@ public class PortalForcer {
             blockposition, i, Double.MAX_VALUE, PoiManager.Occupancy.ANY, true, records
         );
 
+        // PaperDragon start
+        if (level.dragonConfig.force2DPortalSearch) {
+            optional = villageplace.getInSquare(type -> {
+                return type == PoiType.NETHER_PORTAL;
+            }, blockposition, i, PoiManager.Occupancy.ANY).sorted(Comparator.comparingDouble((PoiRecord record) -> {
+                return record.getPos().atY(0).distSqr(blockposition.atY(0));
+            }).thenComparingInt(record -> {
+                return record.getPos().getY();
+            })).filter(record -> {
+                return level.getBlockState(record.getPos()).hasProperty(BlockStateProperties.HORIZONTAL_AXIS);
+            }).findFirst();
+        } else {
+        // PaperDragon end
         // this gets us most of the way there, but we bias towards lower y values.
         PoiRecord lowestYRecord = null;
         for (PoiRecord record : records) {
@@ -86,6 +99,7 @@ public class PortalForcer {
         // now we're done
         optional = Optional.ofNullable(lowestYRecord);
         // Paper end - optimise portals
+        } // PaperDragon
 
         return optional.map((villageplacerecord) -> {
             BlockPos blockposition1 = villageplacerecord.getPos();
