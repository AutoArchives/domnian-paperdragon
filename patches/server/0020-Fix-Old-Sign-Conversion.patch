From 7b874b080a31d09c964276efc15a67a375ad0ab4 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 17 Jun 2016 20:50:11 -0400
Subject: [PATCH] Fix Old Sign Conversion

1) Sign loading code was trying to parse the JSON before the check for oldSign.
   That code could then skip the old sign converting code if it triggers a JSON parse exception.
2) New Mojang Schematic system has Tile Entities in the new converted format, but missing the Bukkit.isConverted flag
   This causes Igloos and such to render broken signs. We fix this by ignoring sign conversion for Defined Structures
---
 src/main/java/net/minecraft/server/DefinedStructure.java | 4 +++-
 src/main/java/net/minecraft/server/TileEntity.java       | 1 +
 src/main/java/net/minecraft/server/TileEntitySign.java   | 5 +++--
 3 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/src/main/java/net/minecraft/server/DefinedStructure.java b/src/main/java/net/minecraft/server/DefinedStructure.java
index dc795bd..7d40ed3 100644
--- a/src/main/java/net/minecraft/server/DefinedStructure.java
+++ b/src/main/java/net/minecraft/server/DefinedStructure.java
@@ -203,7 +203,9 @@ public class DefinedStructure {
                                 definedstructure_blockinfo1.c.setInt("x", blockposition1.getX());
                                 definedstructure_blockinfo1.c.setInt("y", blockposition1.getY());
                                 definedstructure_blockinfo1.c.setInt("z", blockposition1.getZ());
+                                tileentity.isLoadingStructure = true; // Paper // PaperDragon - Not in upstream yet
                                 tileentity.a(definedstructure_blockinfo1.c);
+                                tileentity.isLoadingStructure = false; // Paper // PaperDragon - Not in upstream yet
                                 tileentity.a(definedstructureinfo.b());
                                 tileentity.a(definedstructureinfo.c());
                             }
@@ -609,7 +611,7 @@ public class DefinedStructure {
         public IBlockData a(int i) {
             IBlockData iblockdata = (IBlockData) this.b.fromId(i);
 
-            return iblockdata == null ? DefinedStructure.a.a : iblockdata;
+            return iblockdata == null ? a : iblockdata; // PaperDragon - IntilliJ didn't know which 'a' this was :/
         }
 
         public Iterator<IBlockData> iterator() {
diff --git a/src/main/java/net/minecraft/server/TileEntity.java b/src/main/java/net/minecraft/server/TileEntity.java
index 598ab6d..f5b8eec 100644
--- a/src/main/java/net/minecraft/server/TileEntity.java
+++ b/src/main/java/net/minecraft/server/TileEntity.java
@@ -13,6 +13,7 @@ import org.bukkit.inventory.InventoryHolder; // CraftBukkit
 public abstract class TileEntity {
 
     public Timing tickTimer = MinecraftTimings.getTileEntityTimings(this); // Paper
+    boolean isLoadingStructure = false; // Paper // PaperDragon - Not in upstream yet
     private static final Logger a = LogManager.getLogger();
     private static final Map<String, Class<? extends TileEntity>> f = Maps.newHashMap();
     private static final Map<Class<? extends TileEntity>, String> g = Maps.newHashMap();
diff --git a/src/main/java/net/minecraft/server/TileEntitySign.java b/src/main/java/net/minecraft/server/TileEntitySign.java
index 5694ff7..ce97643 100644
--- a/src/main/java/net/minecraft/server/TileEntitySign.java
+++ b/src/main/java/net/minecraft/server/TileEntitySign.java
@@ -93,13 +93,14 @@ public class TileEntitySign extends TileEntity {
             }
 
             try {
-                IChatBaseComponent ichatbasecomponent = IChatBaseComponent.ChatSerializer.a(s);
+                //IChatBaseComponent ichatbasecomponent = IChatBaseComponent.ChatSerializer.a(s); // Paper - move down - the old format might throw a json error // PaperDragon - Not in upstream yet
 
-                if (oldSign) {
+                if (oldSign && !isLoadingStructure) { // Paper - saved structures will be in the new format, but will not have isConverted // PaperDragon - Not in upstream yet
                     lines[i] = org.bukkit.craftbukkit.util.CraftChatMessage.fromString(s)[0];
                     continue;
                 }
                 // CraftBukkit end
+                IChatBaseComponent ichatbasecomponent = IChatBaseComponent.ChatSerializer.a(s); // Paper - after old sign // PaperDragon - Not in upstream yet
 
                 try {
                     this.lines[i] = ChatComponentUtils.filterForDisplay(icommandlistener, ichatbasecomponent, (Entity) null);
-- 
2.5.0

