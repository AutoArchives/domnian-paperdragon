From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: willies952002 <admin@domnian.com>
Date: Sun, 27 Nov 2022 00:43:31 -0500
Subject: [PATCH] Implement Dragon Item API


diff --git a/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Item.java b/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Item.java
new file mode 100644
index 0000000000000000000000000000000000000000..c623894830314376bb0c1d6cb9a351b2b34442de
--- /dev/null
+++ b/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Item.java
@@ -0,0 +1,39 @@
+package com.domnian.paperdragon.api;
+
+import io.netty.buffer.ByteBufInputStream;
+import io.netty.buffer.ByteBufOutputStream;
+import io.netty.buffer.Unpooled;
+import net.minecraft.nbt.CompoundTag;
+import net.minecraft.nbt.NbtIo;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.inventory.ItemStack;
+import org.jetbrains.annotations.NotNull;
+
+import java.io.IOException;
+
+public class CraftDAPI_Item implements DAPI_Item {
+
+    @Override
+    public byte[] getItemTag(@NotNull ItemStack item, boolean compressed) throws IOException {
+        net.minecraft.world.item.ItemStack nmsStack = CraftItemStack.asNMSCopy(item);
+        if (nmsStack.getTag() == null) return null;
+        ByteBufOutputStream stream = new ByteBufOutputStream(Unpooled.buffer());
+        if (compressed) {
+            NbtIo.writeCompressed(nmsStack.getTag(), stream);
+        } else {
+            NbtIo.write(nmsStack.getTag(), stream);
+        }
+        return stream.buffer().array();
+    }
+
+    @Override
+    public ItemStack setItemTag(@NotNull ItemStack item, byte[] tag) throws IOException {
+        ByteBufInputStream stream = new ByteBufInputStream(Unpooled.wrappedBuffer(tag));
+        boolean compressed = (tag[0] == (byte) 0x1F && tag[1] == (byte) 0x8B);
+        CompoundTag compoundTag = compressed ? NbtIo.readCompressed(stream) : NbtIo.read(stream);
+        net.minecraft.world.item.ItemStack nmsStack = CraftItemStack.asNMSCopy(item);
+        nmsStack.setTag(compoundTag);
+        return CraftItemStack.asCraftMirror(nmsStack);
+    }
+
+}
diff --git a/src/main/java/com/domnian/paperdragon/api/CraftDragonAPI.java b/src/main/java/com/domnian/paperdragon/api/CraftDragonAPI.java
index f31082d0f9d8da4197f69465d9702fa17dc65b63..5712e2b587946744e9b424203c495bb72272ef1f 100644
--- a/src/main/java/com/domnian/paperdragon/api/CraftDragonAPI.java
+++ b/src/main/java/com/domnian/paperdragon/api/CraftDragonAPI.java
@@ -38,6 +38,7 @@ public final class CraftDragonAPI extends DragonAPI {
         chat = new CraftDAPI_Chat();
         heads = new CraftDAPI_Heads();
         server = new CraftDAPI_Server();
+        item = new CraftDAPI_Item();
     }
 
     public static CraftDAPI_Server getServer() {
