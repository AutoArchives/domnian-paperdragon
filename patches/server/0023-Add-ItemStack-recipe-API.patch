From bf5ce497f89b516cb24705ef01c7148765fb9417 Mon Sep 17 00:00:00 2001
From: GreenMeanie <GreenMeanieMC@gmail.com>
Date: Sun, 24 Jul 2016 19:38:19 -0400
Subject: [PATCH] Add ItemStack recipe API

Allows using custom items in Crafting Recipes
---
 src/main/java/net/minecraft/server/ItemStack.java              | 10 +++++++++-
 src/main/java/net/minecraft/server/ShapedRecipes.java          |  9 ++++++++-
 src/main/java/net/minecraft/server/ShapelessRecipes.java       |  5 ++++-
 .../org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java    |  5 +++--
 .../org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java |  5 +++--
 5 files changed, 27 insertions(+), 7 deletions(-)

diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java
index 1b6ef54..de7fdbe 100644
--- a/src/main/java/net/minecraft/server/ItemStack.java
+++ b/src/main/java/net/minecraft/server/ItemStack.java
@@ -20,7 +20,15 @@ import org.bukkit.event.world.StructureGrowEvent;
 // CraftBukkit end
 
 public final class ItemStack {
-
+    // PaperDragon start - Import Patch From EMC
+    org.bukkit.inventory.ItemStack bukkitStack = null;
+    public org.bukkit.inventory.ItemStack getBukkitStack() {
+        if (bukkitStack == null) {
+            bukkitStack = org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(this);
+        }
+        return bukkitStack;
+    }
+    // PaperDragon end
     public static final DecimalFormat a = new DecimalFormat("#.##");
     public int count;
     public int c;
diff --git a/src/main/java/net/minecraft/server/ShapedRecipes.java b/src/main/java/net/minecraft/server/ShapedRecipes.java
index f8b2dc6..0fd8a94 100644
--- a/src/main/java/net/minecraft/server/ShapedRecipes.java
+++ b/src/main/java/net/minecraft/server/ShapedRecipes.java
@@ -69,7 +69,8 @@ public class ShapedRecipes implements IRecipe {
         char c = 'a';
         for (ItemStack stack : this.items) {
             if (stack != null) {
-                recipe.setIngredient(c, org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), stack.getData());
+                //recipe.setIngredient(c, org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), stack.getData()); // PaperDragon
+                recipe.setIngredient(c, stack.getBukkitStack()); // PaperDragon
             }
             c++;
         }
@@ -141,6 +142,12 @@ public class ShapedRecipes implements IRecipe {
                     if (itemstack.getData() != 32767 && itemstack.getData() != itemstack1.getData()) {
                         return false;
                     }
+                    // PaperDragon start - Import Patch From EMC
+                    // 32767 is some magic code for "don't care what the durability of the block is"
+                    if (!itemstack.getBukkitStack().isSimilar(itemstack1.getBukkitStack(), itemstack.getData() == 32767)) {
+                        return false;
+                    }
+                    // PaperDragon end
                 }
             }
         }
diff --git a/src/main/java/net/minecraft/server/ShapelessRecipes.java b/src/main/java/net/minecraft/server/ShapelessRecipes.java
index 2a866e2..1f31bec 100644
--- a/src/main/java/net/minecraft/server/ShapelessRecipes.java
+++ b/src/main/java/net/minecraft/server/ShapelessRecipes.java
@@ -28,7 +28,8 @@ public class ShapelessRecipes implements IRecipe {
         CraftShapelessRecipe recipe = new CraftShapelessRecipe(result, this);
         for (ItemStack stack : (List<ItemStack>) this.ingredients) {
             if (stack != null) {
-                recipe.addIngredient(org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), stack.getData());
+                //recipe.addIngredient(org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), stack.getData()); // PaperDragon
+                recipe.addIngredient(stack.getBukkitStack()); // PaperDragon
             }
         }
         return recipe;
@@ -65,9 +66,11 @@ public class ShapelessRecipes implements IRecipe {
                     boolean flag = false;
                     Iterator iterator = arraylist.iterator();
 
+                    org.bukkit.inventory.ItemStack bukkitStack = itemstack.getBukkitStack(); // PaperDragon
                     while (iterator.hasNext()) {
                         ItemStack itemstack1 = (ItemStack) iterator.next();
 
+                        if (!bukkitStack.isSimilar(itemstack1.getBukkitStack(), itemstack1.getData() == 32767)) { continue; } // PaperDragon - 32767 is some magic code for "don't care what the durability of the block is"
                         if (itemstack.getItem() == itemstack1.getItem() && (itemstack1.getData() == 32767 || itemstack.getData() == itemstack1.getData())) {
                             flag = true;
                             arraylist.remove(itemstack1);
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java
index baea759..185e228 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java
@@ -33,7 +33,7 @@ public class CraftShapedRecipe extends ShapedRecipe implements CraftRecipe {
         for (char c : ingredientMap.keySet()) {
             ItemStack stack = ingredientMap.get(c);
             if (stack != null) {
-                ret.setIngredient(c, stack.getType(), stack.getDurability());
+                ret.setIngredient(c, stack); // PaperDragon
             }
         }
         return ret;
@@ -57,7 +57,8 @@ public class CraftShapedRecipe extends ShapedRecipe implements CraftRecipe {
             i++;
             int id = mdata.getTypeId();
             short dmg = mdata.getDurability();
-            data[i] = new net.minecraft.server.ItemStack(CraftMagicNumbers.getItem(id), 1, dmg);
+            //data[i] = new net.minecraft.server.ItemStack(CraftMagicNumbers.getItem(id), 1, dmg); // PaperDragon
+            data[i] = CraftItemStack.asNMSCopy(mdata); // PaperDragon
             i++;
         }
         CraftingManager.getInstance().registerShapedRecipe(CraftItemStack.asNMSCopy(this.getResult()), data);
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java
index 53479c7..b439e06 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java
@@ -28,7 +28,7 @@ public class CraftShapelessRecipe extends ShapelessRecipe implements CraftRecipe
         }
         CraftShapelessRecipe ret = new CraftShapelessRecipe(recipe.getResult());
         for (ItemStack ingred : recipe.getIngredientList()) {
-            ret.addIngredient(ingred.getType(), ingred.getDurability());
+            ret.addIngredient(ingred); // PaperDragon
         }
         return ret;
     }
@@ -40,7 +40,8 @@ public class CraftShapelessRecipe extends ShapelessRecipe implements CraftRecipe
         for (ItemStack mdata : ingred) {
             int id = mdata.getTypeId();
             short dmg = mdata.getDurability();
-            data[i] = new net.minecraft.server.ItemStack(CraftMagicNumbers.getItem(id), 1, dmg);
+            //data[i] = new net.minecraft.server.ItemStack(CraftMagicNumbers.getItem(id), 1, dmg); // PaperDragon
+            data[i] = CraftItemStack.asNMSCopy(mdata); // PaperDragon
             i++;
         }
         CraftingManager.getInstance().registerShapelessRecipe(CraftItemStack.asNMSCopy(this.getResult()), data);
-- 
2.10.2

