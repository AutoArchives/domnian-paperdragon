From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 31 Dec 2012 01:25:46 -0500
Subject: [PATCH] Anvil Event

Fire an event for anvil usage, remove cap from server, send level to client

diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index 073cec4838b88bf4e7444321a74ab73fff732486..bf2e61365018ae80e8c474345ac70bd775ddfe64 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -277,6 +277,24 @@ public class AnvilMenu extends ItemCombinerMenu {
             if (this.cost.get() >= this.maximumRepairCost && !this.player.getAbilities().instabuild) { // CraftBukkit
                 itemstack1 = ItemStack.EMPTY;
             }
+            // PaperDragon start
+            final int origCost = this.cost.get();
+            com.domnian.paperdragon.events.AnvilEvent event = new com.domnian.paperdragon.events.AnvilEvent(
+                    (org.bukkit.entity.Player) player.getBukkitEntity(),
+                    org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(itemstack),
+                    org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(itemstack2),
+                    org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(itemstack1),
+                    this.cost.get()
+            );
+            org.bukkit.Bukkit.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                itemstack1 = ItemStack.EMPTY;
+            } else {
+                itemstack1 = org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(event.getResult());
+                this.cost.set(event.getCost());
+                this.cost.forceUpdate = origCost != event.getCost();
+            }
+            // PaperDragon end
 
             if (!itemstack1.isEmpty()) {
                 int k2 = itemstack1.getBaseRepairCost();
diff --git a/src/main/java/net/minecraft/world/inventory/DataSlot.java b/src/main/java/net/minecraft/world/inventory/DataSlot.java
index 6792bde386af8f1a6eae451cebcd0b32e83cd72b..37d1f03fe30e121f2a74b3bbc74247f17a33f3a6 100644
--- a/src/main/java/net/minecraft/world/inventory/DataSlot.java
+++ b/src/main/java/net/minecraft/world/inventory/DataSlot.java
@@ -2,6 +2,7 @@ package net.minecraft.world.inventory;
 
 public abstract class DataSlot {
     private int prevValue;
+    public boolean forceUpdate = false; // PaperDragon
 
     public static DataSlot forContainer(ContainerData delegate, int index) {
         return new DataSlot() {
@@ -52,6 +53,7 @@ public abstract class DataSlot {
     public abstract void set(int value);
 
     public boolean checkAndClearUpdateFlag() {
+        if (this.forceUpdate) { return true; } // PaperDragon
         int i = this.get();
         boolean bl = i != this.prevValue;
         this.prevValue = i;
