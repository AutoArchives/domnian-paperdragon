From 7fe8d0d5f124311715df739505e8adf19e1f5eb8 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 28 Jan 2014 21:04:24 -0500
Subject: [PATCH] Add ItemStack recipe API

Allows using custom items in Crafting Recipes
---
 .../java/net/minecraft/server/RecipeItemStack.java   | 12 ++++++++----
 .../java/net/minecraft/server/ShapedRecipes.java     |  3 ++-
 .../java/net/minecraft/server/ShapelessRecipes.java  |  3 ++-
 .../craftbukkit/inventory/CraftShapedRecipe.java     |  2 +-
 .../craftbukkit/inventory/CraftShapelessRecipe.java  |  2 +-
 5 files changed, 14 insertions(+), 8 deletions(-)

diff --git a/src/main/java/net/minecraft/server/RecipeItemStack.java b/src/main/java/net/minecraft/server/RecipeItemStack.java
index dcc6d9baf..228e99575 100644
--- a/src/main/java/net/minecraft/server/RecipeItemStack.java
+++ b/src/main/java/net/minecraft/server/RecipeItemStack.java
@@ -61,8 +61,12 @@ public final class RecipeItemStack implements Predicate<ItemStack> {
 
             for (int j = 0; j < i; ++j) {
                 ItemStack itemstack1 = aitemstack[j];
+                // PaperDragon start
+                org.bukkit.inventory.ItemStack bukkitStack = itemstack.getBukkitStack();
+                if (bukkitStack.isSimilar(itemstack1.getBukkitStack(), itemstack1.getDamage() == 32767, true)) {
 
-                if (itemstack1.getItem() == itemstack.getItem()) {
+                //if (itemstack1.getItem() == itemstack.getItem()) {
+                    // PaperDragon end
                     return true;
                 }
             }
@@ -156,8 +160,8 @@ public final class RecipeItemStack implements Predicate<ItemStack> {
                 if (jsonarray.size() == 0) {
                     throw new JsonSyntaxException("Item array cannot be empty, at least one item must be defined");
                 } else {
-                    return a(StreamSupport.stream(jsonarray.spliterator(), false).map((jsonelement) -> {
-                        return a(ChatDeserializer.m(jsonelement, "item"));
+                    return a(StreamSupport.stream(jsonarray.spliterator(), false).map((m) -> { // PaperDragon - Fix Decompile Error
+                        return a(ChatDeserializer.m(m, "item"));  // PaperDragon - Fix Decompile Error
                     }));
                 }
             } else {
@@ -198,7 +202,7 @@ public final class RecipeItemStack implements Predicate<ItemStack> {
         }
     }
 
-    public boolean test(@Nullable Object object) {
+    public boolean test(@Nullable ItemStack object) { // PaperDragon - Fix Decompile Error
         return this.a((ItemStack) object);
     }
 
diff --git a/src/main/java/net/minecraft/server/ShapedRecipes.java b/src/main/java/net/minecraft/server/ShapedRecipes.java
index 833eaf7b9..0ebabefbc 100644
--- a/src/main/java/net/minecraft/server/ShapedRecipes.java
+++ b/src/main/java/net/minecraft/server/ShapedRecipes.java
@@ -86,7 +86,8 @@ public class ShapedRecipes implements IRecipe {
             list.buildChoices();
             if (list.choices.length > 0) {
                 net.minecraft.server.ItemStack stack = list.choices[0];
-                recipe.setIngredient(c, org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), (list.choices.length) > 1 ? 32767 : 0);
+                // recipe.setIngredient(c, org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), (list.choices.length) > 1 ? 32767 : 0); // PaperDragon
+                recipe.setIngredient(c, stack.getBukkitStack()); // PaperDragon
             }
             c++;
         }
diff --git a/src/main/java/net/minecraft/server/ShapelessRecipes.java b/src/main/java/net/minecraft/server/ShapelessRecipes.java
index 044df2b12..643d0f4e7 100644
--- a/src/main/java/net/minecraft/server/ShapelessRecipes.java
+++ b/src/main/java/net/minecraft/server/ShapelessRecipes.java
@@ -32,7 +32,8 @@ public class ShapelessRecipes implements IRecipe {
         for (RecipeItemStack list : this.ingredients) {
             list.buildChoices();
             net.minecraft.server.ItemStack stack = list.choices[0];
-            recipe.addIngredient(org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), (list.choices.length) > 1 ? 32767 : 0);
+            //recipe.addIngredient(org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(stack.getItem()), (list.choices.length) > 1 ? 32767 : 0); // PaperDragon
+            recipe.addIngredient(stack.getBukkitStack()); // PaperDragon
         }
         return recipe;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java
index efd0e76a1..8d764c03c 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapedRecipe.java
@@ -37,7 +37,7 @@ public class CraftShapedRecipe extends ShapedRecipe implements CraftRecipe {
         for (char c : ingredientMap.keySet()) {
             ItemStack stack = ingredientMap.get(c);
             if (stack != null) {
-                ret.setIngredient(c, stack.getType(), stack.getDurability());
+                ret.setIngredient(c, stack.clone()); // PaperDragon
             }
         }
         return ret;
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java
index dbbcb6792..78513d11c 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftShapelessRecipe.java
@@ -32,7 +32,7 @@ public class CraftShapelessRecipe extends ShapelessRecipe implements CraftRecipe
         }
         CraftShapelessRecipe ret = new CraftShapelessRecipe(recipe.getKey(), recipe.getResult());
         for (ItemStack ingred : recipe.getIngredientList()) {
-            ret.addIngredient(ingred.getType(), ingred.getDurability());
+            ret.addIngredient(ingred.clone()); // PaperDragon
         }
         return ret;
     }
-- 
2.18.0

