From 7105032a52b76cafe7c830589cd2ff6358ec5481 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 9 Dec 2013 23:21:21 -0500
Subject: [PATCH] Improved BungeeCord support

Secure BungeeCord with IP Whitelist for IP/UUID forwarding
Allow online-mode to be set to true, and skip online-mode for bungee IP's
---
 src/main/java/net/minecraft/network/NetworkManager.java       | 1 +
 .../java/net/minecraft/server/network/HandshakeListener.java  | 4 +++-
 src/main/java/net/minecraft/server/network/LoginListener.java | 2 +-
 src/main/java/org/spigotmc/SpigotConfig.java                  | 2 ++
 4 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/src/main/java/net/minecraft/network/NetworkManager.java b/src/main/java/net/minecraft/network/NetworkManager.java
index f86f430598..fbc083d894 100644
--- a/src/main/java/net/minecraft/network/NetworkManager.java
+++ b/src/main/java/net/minecraft/network/NetworkManager.java
@@ -68,6 +68,7 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet<?>> {
     public java.util.UUID spoofedUUID;
     public com.mojang.authlib.properties.Property[] spoofedProfile;
     public boolean preparing = true;
+    public boolean isProxied = false; // PaperDragon
     // Spigot End
     private PacketListener packetListener;
     private IChatBaseComponent m;
diff --git a/src/main/java/net/minecraft/server/network/HandshakeListener.java b/src/main/java/net/minecraft/server/network/HandshakeListener.java
index c30270ab3e..4f5d924b77 100644
--- a/src/main/java/net/minecraft/server/network/HandshakeListener.java
+++ b/src/main/java/net/minecraft/server/network/HandshakeListener.java
@@ -90,7 +90,8 @@ public class HandshakeListener implements PacketHandshakingInListener {
                 } else {
                     this.c.setPacketListener(new LoginListener(this.b, this.c));
                 // Paper start - handshake event
-                boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee;
+                String ip = ((java.net.InetSocketAddress) this.c.getSocketAddress()).getAddress().getHostAddress(); // PaperDragon
+                boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee && org.spigotmc.SpigotConfig.bungeeAddresses.contains(ip); // PaperDragon
                 boolean handledByEvent = false;
                 // Try and handle the handshake through the event
                 if (com.destroystokyo.paper.event.player.PlayerHandshakeEvent.getHandlerList().getRegisteredListeners().length != 0) { // Hello? Can you hear me?
@@ -117,6 +118,7 @@ public class HandshakeListener implements PacketHandshakingInListener {
                 // Paper end
                     // Spigot Start
                 //if (org.spigotmc.SpigotConfig.bungee) { // Paper - comment out, we check above!
+                        c.isProxied = true; // PaperDragon
                         String[] split = packethandshakinginsetprotocol.hostname.split("\00");
                         if ( ( split.length == 3 || split.length == 4 ) && ( BYPASS_HOSTCHECK || HOST_PATTERN.matcher( split[1] ).matches() ) ) { // Paper
                             packethandshakinginsetprotocol.hostname = split[0];
diff --git a/src/main/java/net/minecraft/server/network/LoginListener.java b/src/main/java/net/minecraft/server/network/LoginListener.java
index c67b94840e..cc8a6709d2 100644
--- a/src/main/java/net/minecraft/server/network/LoginListener.java
+++ b/src/main/java/net/minecraft/server/network/LoginListener.java
@@ -206,7 +206,7 @@ public class LoginListener implements PacketLoginInListener {
     public void a(PacketLoginInStart packetlogininstart) {
         Validate.validState(this.g == LoginListener.EnumProtocolState.HELLO, "Unexpected hello packet", new Object[0]);
         this.i = packetlogininstart.b();
-        if (this.server.getOnlineMode() && !this.networkManager.isLocal()) {
+        if (!this.networkManager.isProxied && this.server.getOnlineMode() && !this.networkManager.isLocal()) { // PaperDragon - add !isProxied
             this.g = LoginListener.EnumProtocolState.KEY;
             this.networkManager.sendPacket(new PacketLoginOutEncryptionBegin("", this.server.getKeyPair().getPublic().getEncoded(), this.e));
         } else {
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index 564285c1c9..4f0bcfcacb 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -233,6 +233,7 @@ public class SpigotConfig
     }
 
     public static boolean bungee;
+    public static List<String> bungeeAddresses = java.util.Collections.singletonList("127.0.0.1");
     private static void bungee() {
         if ( version < 4 )
         {
@@ -240,6 +241,7 @@ public class SpigotConfig
             System.out.println( "Oudated config, disabling BungeeCord support!" );
         }
         bungee = getBoolean( "settings.bungeecord", false );
+        bungeeAddresses = getList("settings.bungeecord-addresses", bungeeAddresses);
     }
 
     private static void nettyThreads()
-- 
2.20.1.windows.1

