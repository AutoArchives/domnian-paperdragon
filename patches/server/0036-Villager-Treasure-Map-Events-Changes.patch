From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 13 Dec 2016 00:40:10 -0500
Subject: [PATCH] Villager Treasure Map Events / Changes


diff --git a/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Misc.java b/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Misc.java
index ab3428a68e496af2a453af85d7ecce9ee2423022..9333ca32a5b65482c3f0162c62aa63979f820eaa 100644
--- a/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Misc.java
+++ b/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Misc.java
@@ -23,5 +23,34 @@
 
 package com.domnian.paperdragon.api;
 
+import net.minecraft.core.BlockPos;
+import net.minecraft.network.chat.TranslatableComponent;
+import net.minecraft.server.MCUtil;
+import net.minecraft.server.level.ServerLevel;
+import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.item.MapItem;
+import net.minecraft.world.level.saveddata.maps.MapDecoration;
+import net.minecraft.world.level.saveddata.maps.MapItemSavedData;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.jetbrains.annotations.NotNull;
+
 public class CraftDAPI_Misc implements DAPI_Misc {
+
+    @Override
+    @NotNull
+    public org.bukkit.inventory.ItemStack createTreasureMap(@NotNull String mapType, int iconType, @NotNull Location loc) {
+        MapDecoration.Type[] values = MapDecoration.Type.values();
+        if (iconType >= values.length) {
+            throw new IllegalArgumentException("Invalid Icon Type");
+        }
+        ServerLevel level = MCUtil.getNMSWorld(loc.getWorld());
+        BlockPos pos = MCUtil.toBlockPosition(loc);
+        ItemStack itemstack = MapItem.create(level, pos.getX(), pos.getZ(), (byte) 2, true, true);
+        MapItem.renderBiomePreviewMap(level, itemstack);
+
+        MapItemSavedData.addTargetDecoration(itemstack, pos, "+", values[iconType]);
+        itemstack.setHoverName(new TranslatableComponent("filled_map." + mapType.toLowerCase()));
+        return CraftItemStack.asCraftMirror(itemstack);
+    }
 }
diff --git a/src/main/java/net/minecraft/world/entity/npc/VillagerTrades.java b/src/main/java/net/minecraft/world/entity/npc/VillagerTrades.java
index d595c82f850bb04657a86748d7e04695f934846f..db298298a6a5a7bf4bd5f2bd99e867d12ab45e43 100644
--- a/src/main/java/net/minecraft/world/entity/npc/VillagerTrades.java
+++ b/src/main/java/net/minecraft/world/entity/npc/VillagerTrades.java
@@ -393,6 +393,18 @@ public class VillagerTrades {
                     MapItem.renderBiomePreviewMap(serverLevel, itemStack);
                     MapItemSavedData.addTargetDecoration(itemStack, blockPos, "+", this.destinationType);
                     itemStack.setHoverName(new TranslatableComponent(this.displayName));
+                    // PaperDragon start - add event for treasure map creation
+                    if (com.domnian.paperdragon.events.CreateTreasureMapEvent.getHandlerList().hasListeners()) {
+                        org.bukkit.inventory.ItemStack craftOriginal = org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(itemStack);
+                        org.bukkit.map.MapCursor.Type type = org.bukkit.map.MapCursor.Type.byValue(destinationType.getIcon());
+                        com.domnian.paperdragon.events.CreateTreasureMapEvent event = new com.domnian.paperdragon.events.CreateTreasureMapEvent(craftOriginal, this.emeraldCost, type, this.destinationType.ordinal());
+                        event.callEvent();
+                        if (event.getItem() != null && !event.getItem().equals(craftOriginal)) {
+                            itemStack = org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(event.getItem());
+                        }
+                        return new MerchantOffer(new ItemStack(Items.EMERALD, event.getEmeraldCost()), new ItemStack(Items.COMPASS), itemStack, event.getMaxUses(), this.villagerXp, 0.2F);
+                    }
+                    // PaperDragon end
                     return new MerchantOffer(new ItemStack(Items.EMERALD, this.emeraldCost), new ItemStack(Items.COMPASS), itemStack, this.maxUses, this.villagerXp, 0.2F);
                 } else {
                     return null;
