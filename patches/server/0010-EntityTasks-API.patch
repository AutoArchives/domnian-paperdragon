From de520d94d576ec93bc3f6ef34bf32feede69554d Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 11 Jun 2013 23:15:00 -0400
Subject: [PATCH] EntityTasks API

Allows scheduling repeating task timers on an entity level.
Avoids Bukkit system so that tasks will simply maintain themselves on entity removal.
---
 .../paperdragon/api/CraftDAPI_Entity.java     | 15 ++++++
 .../minecraft/server/EntityTasksHandler.java  | 47 +++++++++++++++++++
 .../minecraft/server/level/WorldServer.java   |  3 +-
 .../net/minecraft/world/entity/Entity.java    |  1 +
 .../org/bukkit/craftbukkit/CraftServer.java   |  1 +
 5 files changed, 66 insertions(+), 1 deletion(-)
 create mode 100644 src/main/java/net/minecraft/server/EntityTasksHandler.java

diff --git a/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Entity.java b/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Entity.java
index d5c6381045..1e903fe5ce 100644
--- a/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Entity.java
+++ b/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Entity.java
@@ -23,5 +23,20 @@
 
 package com.domnian.paperdragon.api;
 
+import net.minecraft.server.EntityTasksHandler;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.entity.Entity;
+
 public class CraftDAPI_Entity implements DAPI_Entity {
+
+    public <T extends Entity> EntityTask<T> scheduleTask(T entity, int interval, EntityTask<T> task) {
+        final EntityTasksHandler.TaskList entityTasks = ((CraftEntity) entity).getHandle().entityTasks;
+        entityTasks.add(task);
+        task.init(entity, interval);
+        return task;
+    }
+
+    public void cancelTasks(Entity entity) {
+        ((CraftEntity) entity).getHandle().entityTasks.clear();
+    }
 }
diff --git a/src/main/java/net/minecraft/server/EntityTasksHandler.java b/src/main/java/net/minecraft/server/EntityTasksHandler.java
new file mode 100644
index 0000000000..74b5598889
--- /dev/null
+++ b/src/main/java/net/minecraft/server/EntityTasksHandler.java
@@ -0,0 +1,47 @@
+package net.minecraft.server;
+
+import com.domnian.paperdragon.api.EntityTask;
+import net.minecraft.server.level.WorldServer;
+import net.minecraft.world.entity.Entity;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+public final class EntityTasksHandler {
+
+    private EntityTasksHandler() {}
+
+    public static void tickHandler(Entity entity) {
+        if (entity.entityTasks.isEmpty()) {
+            return;
+        }
+        List<EntityTask> tasksToRun = new ArrayList<>();
+        final Iterator<EntityTask> it = entity.entityTasks.iterator();
+        while (it.hasNext()) {
+            EntityTask task = it.next();
+            if (!task.isValid()) {
+                it.remove();
+                continue;
+            }
+            if (task.isReady()) {
+                tasksToRun.add(task);
+            }
+        }
+
+        tasksToRun.forEach(EntityTask::tick);
+    }
+
+    public static void reload() {
+        for (WorldServer world : MinecraftServer.getServer().getWorlds()) {
+            for (Entity entity : world.entitiesById.values()) {
+                entity.entityTasks.clear();
+            }
+            for (Entity entity : world.entitiesByUUID.values()) {
+                entity.entityTasks.clear();
+            }
+        }
+    }
+
+    public static class TaskList extends ArrayList<EntityTask> {}
+}
diff --git a/src/main/java/net/minecraft/server/level/WorldServer.java b/src/main/java/net/minecraft/server/level/WorldServer.java
index 02098be281..48f0bb9809 100644
--- a/src/main/java/net/minecraft/server/level/WorldServer.java
+++ b/src/main/java/net/minecraft/server/level/WorldServer.java
@@ -949,6 +949,7 @@ public class WorldServer extends World implements GeneratorAccessSeed {
             entity.lastPitch = entity.pitch;
             if (entity.inChunk) {
                 ++entity.ticksLived;
+                net.minecraft.server.EntityTasksHandler.tickHandler(entity); // PaperDragon
                 GameProfilerFiller gameprofilerfiller = this.getMethodProfiler();
 
                 gameprofilerfiller.a(() -> {
@@ -959,7 +960,7 @@ public class WorldServer extends World implements GeneratorAccessSeed {
                     TimingHistory.activatedEntityTicks++; // Paper
                 entity.tick();
                 entity.postTick(); // CraftBukkit
-                } else { entity.inactiveTick(); } // Paper - EAR 2
+                } else { net.minecraft.server.EntityTasksHandler.tickHandler(entity); entity.inactiveTick(); } // Paper - EAR 2 // PaperDragon
                 gameprofilerfiller.exit();
             }
 
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index f3bcc59337..c332a4a237 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -146,6 +146,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, ne
 
     // CraftBukkit start
     public com.domnian.paperdragon.api.meta.PersistentMetaMap metaMap = null; // PaperDragon
+    public net.minecraft.server.EntityTasksHandler.TaskList entityTasks = new net.minecraft.server.EntityTasksHandler.TaskList(); // PaperDragon
     private static final int CURRENT_LEVEL = 2;
     public boolean preserveMotion = true; // Paper - keep initial motion on first setPositionRotation
     static boolean isLevelAtLeast(NBTTagCompound tag, int level) {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index ba939d5fdd..9bb126c713 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -967,6 +967,7 @@ public final class CraftServer implements Server {
         }
         // PaperDragon start
         net.minecraft.server.MetaApiAccessor.reload();
+        net.minecraft.server.EntityTasksHandler.reload();
         // PaperDragon end
         loadPlugins();
         enablePlugins(PluginLoadOrder.STARTUP);
-- 
2.20.1.windows.1

