From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 7 Aug 2013 19:52:14 -0400
Subject: [PATCH] VehicleExitEvent Dismount Reason API


diff --git a/src/main/java/net/minecraft/server/commands/TeleportCommand.java b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
index a9cac4cc5f9cd9a2584361565b86fc31b0a57e49..8b4b83c309bac74a06d7eec425e410e75341a2c1 100644
--- a/src/main/java/net/minecraft/server/commands/TeleportCommand.java
+++ b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
@@ -39,6 +39,7 @@ import net.minecraft.world.phys.Vec3;
 import org.bukkit.Location;
 import org.bukkit.craftbukkit.CraftWorld;
 import org.bukkit.event.entity.EntityTeleportEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent; // PaperDragon
 // CraftBukkit end
 
 public class TeleportCommand {
@@ -165,6 +166,7 @@ public class TeleportCommand {
                 ChunkPos chunkcoordintpair = new ChunkPos(new BlockPos(x, y, z));
 
                 world.getChunkSource().addRegionTicket(TicketType.POST_TELEPORT, chunkcoordintpair, 1, target.getId());
+                target.dismountReason = VehicleExitEvent.DismountReason.TELEPORT; // PaperDragon
                 target.stopRiding();
                 if (((ServerPlayer) target).isSleeping()) {
                     ((ServerPlayer) target).stopSleepInBed(true, true);
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 17e0cfcd12a49e6133f5dc12524cdf17a4746c5f..d7cd81dc2e2debe4a9ca93f20cd2a507b12aa760 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -159,6 +159,7 @@ import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.util.WorldUUID;
 import org.bukkit.event.entity.CreatureSpawnEvent;
 import org.bukkit.event.server.MapInitializeEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent; // Paperdragon
 import org.bukkit.event.weather.LightningStrikeEvent;
 import org.bukkit.event.world.TimeSkipEvent;
 // CraftBukkit end
@@ -769,6 +770,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                                 return;
                             }
 
+                            if (entity1.isRemoved()) { entity.dismountReason = VehicleExitEvent.DismountReason.DEAD_VEHICLE; } // PaperDragon
                             entity.stopRiding();
                         }
 
@@ -1181,6 +1183,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
             } finally { timer.stopTiming(); }// Paper - EAR2 timings
             }
         } else {
+            if (passenger.isRemoved()) { passenger.dismountReason = VehicleExitEvent.DismountReason.DEAD; } // PaperDragon
             passenger.stopRiding();
         }
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 78fda0c982810b8b881a87099f355247566e513a..f73cab144dfffa51194b40599f7d3c80a095d446 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -167,6 +167,7 @@ import org.bukkit.event.player.PlayerLocaleChangeEvent;
 import org.bukkit.event.player.PlayerPortalEvent;
 import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
+import org.bukkit.event.vehicle.VehicleExitEvent; // PaperDragon
 import org.bukkit.inventory.MainHand;
 // CraftBukkit end
 
@@ -1646,10 +1647,11 @@ public class ServerPlayer extends Player {
 
     public void disconnect() {
         this.disconnected = true;
-        this.ejectPassengers();
+        this.ejectPassengers(VehicleExitEvent.DismountReason.DISCONNECT); // PaperDragon
 
         // Paper start - Workaround an issue where the vehicle doesn't track the passenger disconnection dismount.
         if (this.isPassenger() && this.getVehicle() instanceof ServerPlayer) {
+            this.dismountReason = VehicleExitEvent.DismountReason.DISCONNECT; // PaperDragon
             this.stopRiding();
         }
         // Paper end
@@ -1815,6 +1817,7 @@ public class ServerPlayer extends Player {
             this.connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.CHANGE_GAME_MODE, (float) gameMode.getId()));
             if (gameMode == GameType.SPECTATOR) {
                 this.removeEntitiesOnShoulder();
+                this.dismountReason = VehicleExitEvent.DismountReason.SPECTATE; // PaperDragon
                 this.stopRiding();
             } else {
                 this.setCamera(this);
@@ -1988,7 +1991,7 @@ public class ServerPlayer extends Player {
 
         if (entity != this) {
             // Make sure we're in the right place
-            this.ejectPassengers(); // teleport can fail if we have passengers...
+            this.ejectPassengers(VehicleExitEvent.DismountReason.SPECTATE); // teleport can fail if we have passengers... // PaperDragon
             this.getBukkitEntity().teleport(new Location(entity.getCommandSenderWorld().getWorld(), entity.getX(), entity.getY(), entity.getZ(), this.getYRot(), this.getXRot()), TeleportCause.SPECTATE); // Correctly handle cross-world entities from api calls by using CB teleport
 
             // Make sure we're tracking the entity before sending
@@ -2056,6 +2059,7 @@ public class ServerPlayer extends Player {
     public void teleportTo(ServerLevel targetWorld, double x, double y, double z, float yaw, float pitch, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
         // CraftBukkit end
         this.setCamera(this);
+        this.dismountReason = VehicleExitEvent.DismountReason.TELEPORT; // PaperDragon
         this.stopRiding();
         /* CraftBukkit start - replace with bukkit handling for multi-world
         if (worldserver == this.level) {
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index eaa005c1c9b4386bcdbe1d6eb28c3eca7635066c..162d4950746a7c375bb04355d3f961163399762e 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -119,6 +119,7 @@ import org.bukkit.event.player.PlayerJoinEvent;
 import org.bukkit.event.player.PlayerLoginEvent;
 import org.bukkit.event.player.PlayerQuitEvent;
 import org.bukkit.event.player.PlayerRespawnEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent; // PaperDragon
 // CraftBukkit end
 
 public abstract class PlayerList {
@@ -634,6 +635,7 @@ public abstract class PlayerList {
 
             if (entity.hasExactlyOnePlayerPassenger()) {
                 PlayerList.LOGGER.debug("Removing player mount");
+                entityplayer.dismountReason = VehicleExitEvent.DismountReason.DISCONNECT; // PaperDragon
                 entityplayer.stopRiding();
                 entity.getPassengersAndSelf().forEach((entity1) -> {
                     // Paper start
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index f23445bfbccf8ee983840c66a11bc17ddd4bb5fd..054fa7056a89979c6504ba0cd48e0775415df97b 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -158,6 +158,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
     public final PersistentMetaMap metaMap = new PersistentMetaMap(); // PaperDragon
     public final TempMetaMap tempMeta = new TempMetaMap();
     public EntityTasksHandler.TaskList entityTasks = new EntityTasksHandler.TaskList(); // PaperDragon
+    public VehicleExitEvent.DismountReason dismountReason = VehicleExitEvent.DismountReason.UNKNOWN;
     // PaperDragon end
     // CraftBukkit start
     private static final int CURRENT_LEVEL = 2;
@@ -723,6 +724,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
         if (isDisabled) { return; } // PaperDragon
         this.level.getProfiler().push("entityBaseTick");
         if (this.isPassenger() && this.getVehicle().isRemoved()) {
+            this.dismountReason = VehicleExitEvent.DismountReason.DEAD_VEHICLE; // PaperDragon
             this.stopRiding();
         }
 
@@ -2542,6 +2544,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
                 return false;
             } else {
                 if (this.isPassenger()) {
+                    this.dismountReason = VehicleExitEvent.DismountReason.TRANSFER; // PaperDragon
                     this.stopRiding();
                 }
 
@@ -2567,7 +2570,13 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
     }
 
     public void ejectPassengers() {
+        // PaperDragon start - allow passing reason to ejectPassengers()
+        ejectPassengers(VehicleExitEvent.DismountReason.UNKNOWN);
+    }
+    public void ejectPassengers(VehicleExitEvent.DismountReason reason) {
+        // PaperDragon end
         for (int i = this.passengers.size() - 1; i >= 0; --i) {
+            this.passengers.get(i).dismountReason = reason; // PaperDragon
             ((Entity) this.passengers.get(i)).stopRiding();
         }
 
@@ -2647,6 +2656,8 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
     // Paper start
     protected boolean removePassenger(Entity entity) { return removePassenger(entity, false);}
     protected boolean removePassenger(Entity entity, boolean suppressCancellation) { // CraftBukkit
+        VehicleExitEvent.DismountReason reason = entity.dismountReason; // PaperDragon
+        entity.dismountReason = VehicleExitEvent.DismountReason.UNKNOWN; // PaperDragon
         // Paper end
         if (entity.getVehicle() == this) {
             throw new IllegalStateException("Use x.stopRiding(y), not y.removePassenger(x)");
@@ -2659,6 +2670,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
                         (Vehicle) this.getBukkitEntity(),
                         (LivingEntity) entity.getBukkitEntity(), !suppressCancellation // Paper
                 );
+                event.reason = reason; // PaperDragon
                 // Suppress during worldgen
                 if (this.valid) {
                     Bukkit.getPluginManager().callEvent(event);
@@ -4167,10 +4179,16 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
         }
 
         if (this.removalReason.shouldDestroy()) {
+            this.dismountReason = VehicleExitEvent.DismountReason.DEAD; // PaperDragon
             this.stopRiding();
         }
 
-        this.getPassengers().forEach(Entity::stopRiding);
+        // PaperDragon start
+        this.getPassengers().forEach(entity -> {
+            entity.dismountReason = VehicleExitEvent.DismountReason.DEAD_VEHICLE;
+            entity.stopRiding();
+        });
+        // PaperDragon end
         this.levelCallback.onRemove(reason);
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 43ceb3beecfe641c996ca14cd0fbf70fcdc40d90..cdae9ca0280a2ec203ca224e2f6820c7a3ff5d1c 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -436,6 +436,7 @@ public abstract class LivingEntity extends Entity {
                 }
 
                 if (!this.level.isClientSide && this.isPassenger() && this.getVehicle() != null && !this.getVehicle().rideableUnderWater()) {
+                    this.dismountReason = org.bukkit.event.vehicle.VehicleExitEvent.DismountReason.WATER; // PaperDragon
                     this.stopRiding();
                 }
             } else if (this.getAirSupply() < this.getMaxAirSupply()) {
@@ -4025,6 +4026,7 @@ public abstract class LivingEntity extends Entity {
 
     public void startSleeping(BlockPos pos) {
         if (this.isPassenger()) {
+            if (this instanceof net.minecraft.world.entity.player.Player) this.dismountReason = org.bukkit.event.vehicle.VehicleExitEvent.DismountReason.PLAYER; // PaperDragon
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 7cf6d72866965d08b1aae3bafd27e1ffcb2f4717..5d201dcf3ed61f15a5d86008c4595ef3e28a1d50 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -81,6 +81,7 @@ import org.bukkit.event.entity.EntityTargetEvent;
 import org.bukkit.event.entity.EntityTransformEvent;
 import org.bukkit.event.entity.EntityUnleashEvent;
 import org.bukkit.event.entity.EntityUnleashEvent.UnleashReason;
+import org.bukkit.event.vehicle.VehicleExitEvent; // PaperDragon
 // CraftBukkit end
 
 public abstract class Mob extends LivingEntity {
@@ -1438,6 +1439,7 @@ public abstract class Mob extends LivingEntity {
         }
 
         if (this.isPassenger()) {
+            this.dismountReason = VehicleExitEvent.DismountReason.LEASH; // PaperDragon
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 94e76e295dbd0f3bac4b30a3e7338cd56a971207..0010f140e4cd85efedc3c9236e46969311f00632 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -511,6 +511,7 @@ public abstract class Player extends LivingEntity {
     @Override
     public void rideTick() {
         if (!this.level.isClientSide && this.wantsToStopRiding() && this.isPassenger()) {
+            this.dismountReason = org.bukkit.event.vehicle.VehicleExitEvent.DismountReason.PLAYER; // PaperDragon
             this.stopRiding();
             this.setShiftKeyDown(false);
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
index 309bafd257d4932cfd69c2c212b32306938cd234..15fc8c6d5914e6bc0162d4f8c50cc91d7df52426 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
@@ -56,6 +56,7 @@ import org.bukkit.entity.Vehicle;
 import org.bukkit.event.vehicle.VehicleDamageEvent;
 import org.bukkit.event.vehicle.VehicleDestroyEvent;
 import org.bukkit.event.vehicle.VehicleEntityCollisionEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent; // PaperDragon
 import org.bukkit.util.Vector;
 // CraftBukkit end
 
@@ -268,7 +269,7 @@ public abstract class AbstractMinecart extends Entity {
                         return true;
                     }
                     // CraftBukkit end
-                    this.ejectPassengers();
+                    this.ejectPassengers(VehicleExitEvent.DismountReason.DEAD_VEHICLE); // PaperDragon
                     if (flag && !this.hasCustomName()) {
                         this.discard();
                     } else {
diff --git a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
index c2d87fa4c4dc1c7ec89143a96c340b3429c0042c..573cfa54b5cac4a92a7bdf91f28aa7cd13fad13b 100644
--- a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
+++ b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
@@ -9,6 +9,7 @@ import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.animal.Fox;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
+import org.bukkit.event.vehicle.VehicleExitEvent; // PaperDragon
 
 public class ChorusFruitItem extends Item {
 
@@ -31,6 +32,7 @@ public class ChorusFruitItem extends Item {
                 double d5 = user.getZ() + (user.getRandom().nextDouble() - 0.5D) * 16.0D;
 
                 if (user.isPassenger()) {
+                    user.dismountReason = VehicleExitEvent.DismountReason.TELEPORT; // PaperDragon
                     user.stopRiding();
                 }
 
