From d3eb6a3f731c681af7f6607819527878d6c008d7 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 11 Jun 2013 23:15:00 -0400
Subject: [PATCH] EntityTasks API

Allows scheduling repeating task timers on an entity level.
Avoids Bukkit system so that tasks will simply maintain themselves on entity removal.
---
 .../paperdragon/api/CraftDAPI_Entity.java     | 15 +++++++
 .../java/net/minecraft/server/Entity.java     |  1 +
 .../minecraft/server/EntityTasksHandler.java  | 42 +++++++++++++++++++
 .../net/minecraft/server/WorldServer.java     |  2 +
 .../org/bukkit/craftbukkit/CraftServer.java   |  1 +
 5 files changed, 61 insertions(+)
 create mode 100644 src/main/java/net/minecraft/server/EntityTasksHandler.java

diff --git a/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Entity.java b/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Entity.java
index d5c638104..1e903fe5c 100644
--- a/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Entity.java
+++ b/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Entity.java
@@ -23,5 +23,20 @@
 
 package com.domnian.paperdragon.api;
 
+import net.minecraft.server.EntityTasksHandler;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.entity.Entity;
+
 public class CraftDAPI_Entity implements DAPI_Entity {
+
+    public <T extends Entity> EntityTask<T> scheduleTask(T entity, int interval, EntityTask<T> task) {
+        final EntityTasksHandler.TaskList entityTasks = ((CraftEntity) entity).getHandle().entityTasks;
+        entityTasks.add(task);
+        task.init(entity, interval);
+        return task;
+    }
+
+    public void cancelTasks(Entity entity) {
+        ((CraftEntity) entity).getHandle().entityTasks.clear();
+    }
 }
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 7e3abd8d5..60138ee8e 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -54,6 +54,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
 
     // CraftBukkit start
     public com.domnian.paperdragon.api.meta.PersistentMetaMap metaMap = null; // PaperDragon
+    public EntityTasksHandler.TaskList entityTasks = new EntityTasksHandler.TaskList(); // PaperDragon
     private static final int CURRENT_LEVEL = 2;
     static boolean isLevelAtLeast(NBTTagCompound tag, int level) {
         return tag.hasKey("Bukkit.updateLevel") && tag.getInt("Bukkit.updateLevel") >= level;
diff --git a/src/main/java/net/minecraft/server/EntityTasksHandler.java b/src/main/java/net/minecraft/server/EntityTasksHandler.java
new file mode 100644
index 000000000..fafea6e08
--- /dev/null
+++ b/src/main/java/net/minecraft/server/EntityTasksHandler.java
@@ -0,0 +1,42 @@
+package net.minecraft.server;
+
+import com.domnian.paperdragon.api.EntityTask;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+public final class EntityTasksHandler {
+
+    private EntityTasksHandler() {}
+
+    public static void tickHandler(Entity entity) {
+        if (entity.entityTasks.isEmpty()) {
+            return;
+        }
+        List<EntityTask> tasksToRun = new ArrayList<>();
+        final Iterator<EntityTask> it = entity.entityTasks.iterator();
+        while (it.hasNext()) {
+            EntityTask task = it.next();
+            if (!task.isValid()) {
+                it.remove();
+                continue;
+            }
+            if (task.isReady()) {
+                tasksToRun.add(task);
+            }
+        }
+
+        tasksToRun.forEach(EntityTask::tick);
+    }
+
+    public static void reload() {
+        for (WorldServer world : MinecraftServer.getServer().getWorlds()) {
+            for (Entity entity : world.globalEntityList) {
+                entity.entityTasks.clear();
+            }
+        }
+    }
+
+    public static class TaskList extends ArrayList<EntityTask> {}
+}
diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index 22b1ee288..9cd8565c7 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -690,6 +690,7 @@ public class WorldServer extends World {
             // Spigot start
             if (!org.spigotmc.ActivationRange.checkIfActive(entity)) {
                 entity.ticksLived++;
+                EntityTasksHandler.tickHandler(entity); // PaperDragon
                 entity.inactiveTick();
                 return;
             }
@@ -701,6 +702,7 @@ public class WorldServer extends World {
             entity.lastPitch = entity.pitch;
             if (entity.inChunk) {
                 ++entity.ticksLived;
+                EntityTasksHandler.tickHandler(entity); // PaperDragon
                 this.getMethodProfiler().a(() -> {
                     return IRegistry.ENTITY_TYPE.getKey(entity.getEntityType()).toString();
                 });
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index e53819a82..d03b78577 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -862,6 +862,7 @@ public final class CraftServer implements Server {
         }
         // PaperDragon start
         net.minecraft.server.MetaApiAccessor.reload();
+        net.minecraft.server.EntityTasksHandler.reload();
         // PaperDragon end
         loadPlugins();
         enablePlugins(PluginLoadOrder.STARTUP);
-- 
2.22.0

