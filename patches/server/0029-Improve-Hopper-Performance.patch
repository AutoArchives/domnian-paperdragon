From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 29 May 2015 21:58:24 -0400
Subject: [PATCH] Improve Hopper Performance

Only do an item "suck in" action once per second

diff --git a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
index fdbf858ebaae8157a4cefaaa3a96c39fce737e20..b7ea64d36a55c4f8800442c1ee1521e1d5e4f26f 100644
--- a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
@@ -19,11 +19,13 @@ import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.MoverType;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.entity.vehicle.MinecartHopper; // PaperDragon
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.gameevent.GameEvent;
+import net.minecraft.world.phys.AABB; // PaperDragon
 import net.minecraft.world.phys.Vec3;
 // CraftBukkit start
 import net.minecraft.server.MinecraftServer;
@@ -185,10 +187,23 @@ public class ItemEntity extends Entity {
                 // CraftBukkit end
                 this.discard();
             }
+            markHopperCarts(); // PaperDragon
 
         }
     }
 
+    // PaperDragon start
+    private void markHopperCarts() {
+        if (this.isAlive() && this.onGround && this.age < 20 * 60 && this.age % 20 == 0) {
+            AABB aabb = this.getBoundingBox().inflate(32, 4, 32);
+            for (Entity entity : this.level.getEntities(this, aabb)) {
+                if (entity instanceof MinecartHopper) {
+                    ((MinecartHopper) entity).pickupImmunity = MinecraftServer.currentTick + 200;
+                }
+            }
+        }
+    }
+    // PaperDragon end
     // Spigot start - copied from above
     @Override
     public void inactiveTick() {
@@ -209,6 +224,7 @@ public class ItemEntity extends Entity {
             // CraftBukkit end
             this.discard();
         }
+        markHopperCarts(); // PaperDragon
     }
     // Spigot end
 
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
index 449d2e7b18608ca36282f1a29e69457fc525307e..dbe1ce0557c04a4754aefb170bfa0cf11c25c643 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
@@ -22,6 +22,7 @@ public class MinecartHopper extends AbstractMinecartContainer implements Hopper
     private boolean enabled = true;
     private int cooldownTime = -1;
     private final BlockPos lastPosition = BlockPos.ZERO;
+    public int pickupImmunity = 0; // PaperDragon
 
     public MinecartHopper(EntityType<? extends MinecartHopper> type, Level world) {
         super(type, world);
@@ -153,4 +154,11 @@ public class MinecartHopper extends AbstractMinecartContainer implements Hopper
     public AbstractContainerMenu createMenu(int syncId, Inventory playerInventory) {
         return new HopperMenu(syncId, playerInventory, this);
     }
+    // PaperDragon start
+    private long tickAttempts = 0;
+    @Override
+    public long getAndIncrementAttemptCounter() {
+        return tickAttempts++;
+    }
+    // PaperDragon stop
 }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/Hopper.java b/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
index 6a1405a8630e90db3b5a3c9152259ba6f5f0c784..9716b169c7985507e37f545d3e856c8ead0dcb9f 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
@@ -15,6 +15,7 @@ public interface Hopper extends Container {
     }
 
     default net.minecraft.core.BlockPos getBlockPosition() { return new net.minecraft.core.BlockPos(getLevelX(), getLevelY(), getLevelZ()); } // Paper
+    long getAndIncrementAttemptCounter(); // PaperDragon
 
     double getLevelX();
 
diff --git a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index 3e6c058313ee6e541d04d7e672ce94c5e021332a..87350180b4ebe3b9655061389faeb8ec3cc2d609 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -13,6 +13,7 @@ import net.minecraft.core.NonNullList;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TranslatableComponent;
+import net.minecraft.server.MinecraftServer; // PaperDragon
 import net.minecraft.world.CompoundContainer;
 import net.minecraft.world.Container;
 import net.minecraft.world.ContainerHelper;
@@ -118,6 +119,21 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         return ContainerHelper.removeItem(this.getItems(), slot, amount);
     }
 
+    // PaperDragon start
+    private long tickAttempts = 0;
+    @Override
+    public long getAndIncrementAttemptCounter() {
+        return tickAttempts++;
+    }
+    private static boolean shouldSuckIn(Hopper hopper) {
+        if (hopper instanceof MinecartHopper && ((MinecartHopper) hopper).pickupImmunity > MinecraftServer.currentTick) {
+            return true;
+        }
+
+        final int hopperId = (int) hopper.getLevelX() + (int) hopper.getLevelY() + (int) hopper.getLevelZ();
+        return (hopper.getAndIncrementAttemptCounter() + hopperId) % 20 == 0;
+    }
+    // PaperDragon end
     @Override
     public void setItem(int slot, ItemStack stack) {
         this.unpackLootTable((Player) null);
@@ -471,7 +487,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
                 }
                 // Paper end
             });
-        } else {
+        } else if (shouldSuckIn(hopper)) { // PaperDragon
             Iterator iterator = HopperBlockEntity.getItemsAtAndAbove(world, hopper).iterator();
 
             ItemEntity entityitem;
@@ -486,6 +502,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
 
             return true;
         }
+        return false; // PaperDragon
     }
 
     // Paper - method unused as logic is inlined above
