From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 18 Dec 2014 22:48:46 -0500
Subject: [PATCH] Add BlockBreakNaturally Event

To give reliable control over all blocks dropping to world to restore custom item meta

diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 876c7160bf7fa3113dee6527631682d729a94612..dc783c0476c5aa96bc147c556cef6d9c1c9b94b1 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -1405,6 +1405,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
         } else {
             // Paper start - capture all item additions to the world
             if (captureDrops != null && entity instanceof net.minecraft.world.entity.item.ItemEntity) {
+                ((net.minecraft.world.entity.item.ItemEntity) entity).droppedPosition = new BlockPos(entity.getX(), entity.getY(), entity.getZ()); // PaperDragon
                 captureDrops.add((net.minecraft.world.entity.item.ItemEntity) entity);
                 return true;
             }
diff --git a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
index ddcf1964c1590ba60962a6380092dbae98f0b3f4..84ac8d86295114f96342c9f020c0049bb9d9b081 100644
--- a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
@@ -46,6 +46,7 @@ public class ItemEntity extends Entity {
     private static final int INFINITE_LIFETIME = -32768;
     public int age;
     public boolean canDespawn = true; // PaperDragon
+    public BlockPos droppedPosition; // PaperDragon
     public int pickupDelay;
     public int health;
     @Nullable
diff --git a/src/main/java/net/minecraft/world/level/block/Block.java b/src/main/java/net/minecraft/world/level/block/Block.java
index ab5b9f00123e2ede2931ffc520684e482aac49b4..9641783c56f29581f4f31fd2612cd6ce5ea42b99 100644
--- a/src/main/java/net/minecraft/world/level/block/Block.java
+++ b/src/main/java/net/minecraft/world/level/block/Block.java
@@ -21,6 +21,7 @@ import net.minecraft.core.Registry;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.MutableComponent;
 import net.minecraft.network.chat.TranslatableComponent;
+import net.minecraft.server.MCUtil; // PaperDragon
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.stats.Stats;
 import net.minecraft.tags.BlockTags;
@@ -367,7 +368,7 @@ public class Block extends BlockBehaviour implements ItemLike {
 
         Block.popResource(world, () -> {
             return new ItemEntity(world, d0, d1, d2, stack);
-        }, stack);
+        }, stack, pos); // PaperDragon
     }
 
     public static void popResourceFromFace(Level world, BlockPos pos, Direction direction, ItemStack stack) {
@@ -387,18 +388,20 @@ public class Block extends BlockBehaviour implements ItemLike {
 
         Block.popResource(world, () -> {
             return new ItemEntity(world, d0, d1, d2, stack, d3, d4, d5);
-        }, stack);
+        }, stack, pos); // PaperDragon
     }
 
-    private static void popResource(Level world, Supplier<ItemEntity> itemEntitySupplier, ItemStack stack) {
+    private static void popResource(Level world, Supplier<ItemEntity> itemEntitySupplier, ItemStack stack, BlockPos blockPos) { // PaperDragon - add blockPos
         if (!world.isClientSide && !stack.isEmpty() && world.getGameRules().getBoolean(GameRules.RULE_DOBLOCKDROPS)) {
             ItemEntity entityitem = (ItemEntity) itemEntitySupplier.get();
 
             entityitem.setDefaultPickUpDelay();
             // CraftBukkit start
             if (world.captureDrops != null) {
+                entityitem.droppedPosition = blockPos.immutable(); // PaperDragon
                 world.captureDrops.add(entityitem);
             } else {
+                new com.domnian.paperdragon.events.BlockBreakNaturallyEvent(MCUtil.toLocation(world, blockPos), (org.bukkit.entity.Item) entityitem.getBukkitEntity()).callEvent(); // PaperDragon
                 world.addFreshEntity(entityitem);
             }
             // CraftBukkit end
diff --git a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
index 2b53e6da769d46b50884813e38d728bc6c9fecdd..ec96c445a6e2b71f4703b1f45b6609eb2f46b3bb 100644
--- a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
@@ -405,6 +405,16 @@ public class CraftEventFactory {
         Bukkit.getPluginManager().callEvent(event);
 
         if (!event.isCancelled()) {
+            // PaperDragon start
+            com.google.common.collect.Multimap<org.bukkit.Location, org.bukkit.entity.Item> drops = com.google.common.collect.ArrayListMultimap.create();
+            for (Item item : list) {
+                ItemEntity entityItem = (ItemEntity) ((CraftEntity) item).getHandle();
+                drops.put(net.minecraft.server.MCUtil.toLocation(entityItem.level, entityItem.droppedPosition), (org.bukkit.entity.Item) entityItem.getBukkitEntity());
+            }
+            for (org.bukkit.Location location : drops.keySet()) {
+                new com.domnian.paperdragon.events.BlockBreakNaturallyEvent(location, drops.get(location)).callEvent();
+            }
+            // PaperDragon end
             // Paper start
             for (Item bukkit : list) {
                 if (!bukkit.isValid()) {
