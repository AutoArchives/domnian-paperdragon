From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: willies952002 <admin@domnian.com>
Date: Sun, 10 Dec 2017 13:49:00 -0500
Subject: [PATCH] Implement Player Head API (DragonAPI)


diff --git a/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Heads.java b/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Heads.java
new file mode 100644
index 0000000000000000000000000000000000000000..2ef2dc5a22c8e99e82c0096b2777fe3d3ce890f6
--- /dev/null
+++ b/src/main/java/com/domnian/paperdragon/api/CraftDAPI_Heads.java
@@ -0,0 +1,85 @@
+package com.domnian.paperdragon.api;
+
+import co.aikar.timings.NullTimingHandler;
+import co.aikar.timings.Timing;
+import co.aikar.timings.Timings;
+import io.papermc.paper.adventure.PaperAdventure;
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.format.NamedTextColor;
+import net.kyori.adventure.text.format.Style;
+import net.kyori.adventure.text.format.TextDecoration;
+import net.minecraft.nbt.CompoundTag;
+import net.minecraft.nbt.ListTag;
+import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.item.Items;
+import org.bukkit.ChatColor;
+import org.bukkit.Material;
+import org.bukkit.inventory.meta.SkullMeta;
+
+import java.lang.reflect.Method;
+import java.nio.charset.StandardCharsets;
+import java.util.Base64;
+import java.util.UUID;
+
+public class CraftDAPI_Heads implements DAPI_Heads {
+
+    private static final Timing skullCreationTimer = timings();
+
+    /**
+     * Get a Timings Instance to Time Skull Creation
+     * @return a timings instance, else an instance of a {@link co.aikar.timings.NullTimingHandler} on failure
+     */
+    private static Timing timings() {
+        try {
+            Method ofSafeMethod = Timings.class.getDeclaredMethod("ofSafe", String.class);
+            boolean oldAccessible = ofSafeMethod.isAccessible();
+            ofSafeMethod.setAccessible(true);
+            Object timings = ofSafeMethod.invoke(null, "Skull Creation");
+            ofSafeMethod.setAccessible(oldAccessible);
+            if (timings instanceof Timing) {
+                return (Timing) timings;
+            }
+        } catch (Exception ignored) {}
+        return new NullTimingHandler();
+    }
+
+    @Override
+    public org.bukkit.inventory.ItemStack getSkullFromName(String name) {
+        org.bukkit.inventory.ItemStack head = new org.bukkit.inventory.ItemStack(Material.PLAYER_HEAD);
+        SkullMeta meta = (SkullMeta) head.getItemMeta();
+        meta.setOwner(name);
+        meta.displayName(Component.text(
+                name + "'s Head",
+                Style.style(NamedTextColor.YELLOW).decoration(TextDecoration.ITALIC, false))
+        );
+        head.setItemMeta(meta);
+        return head;
+    }
+
+    @Override
+    public org.bukkit.inventory.ItemStack getSkullFromTexture(String hash) {
+        try (Timing ign = skullCreationTimer.startTimingIfSync()) {
+            String url = "http://textures.minecraft.net/texture/" + hash;
+            ItemStack skull = new ItemStack(Items.PLAYER_HEAD, 1);
+            CompoundTag tag = new CompoundTag(),
+                    owner = new CompoundTag(),
+                    props = new CompoundTag(),
+                    textData = new CompoundTag();
+            ListTag textures = new ListTag();
+            owner.putUUID("Id", UUID.randomUUID());
+            textData.putString("Value", getTextureData(url));
+            textures.add(0, textData);
+            props.put("textures", textures);
+            owner.put("Properties", props);
+            tag.put("SkullOwner", owner);
+            skull.setTag(tag);
+            return skull.getBukkitStack();
+        }
+    }
+
+    private static String getTextureData(String url) {
+        String texture = "{\"textures\":{\"SKIN\":{\"url\":\"" + url + "\"}}}";
+        return new String(Base64.getEncoder().encode(texture.getBytes(StandardCharsets.UTF_8)));
+    }
+
+}
diff --git a/src/main/java/com/domnian/paperdragon/api/CraftDragonAPI.java b/src/main/java/com/domnian/paperdragon/api/CraftDragonAPI.java
index 81ceb7f598bc60364267e74f455c7ea58090461b..a6408aab4fb1a8ad518b8be212c6e7996bd2ee84 100644
--- a/src/main/java/com/domnian/paperdragon/api/CraftDragonAPI.java
+++ b/src/main/java/com/domnian/paperdragon/api/CraftDragonAPI.java
@@ -36,6 +36,7 @@ public final class CraftDragonAPI extends DragonAPI {
         misc = new CraftDAPI_Misc();
         meta = new CraftDAPI_Meta();
         chat = new CraftDAPI_Chat();
+        heads = new CraftDAPI_Heads();
     }
 
 }
